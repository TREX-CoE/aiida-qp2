name: ci

on: [push, pull_request]

jobs:

# tests:
#   runs-on: ubuntu-latest
#   timeout-minutes: 30
#   strategy:
#     matrix:
#       python-version: [3.8]
#       backend: ['django']
#
#   services:
#     postgres:
#       image: postgres:10
#       env:
#         POSTGRES_DB: test_${{ matrix.backend }}
#         POSTGRES_PASSWORD: ''
#         POSTGRES_HOST_AUTH_METHOD: trust
#       options: >-
#         --health-cmd pg_isready
#         --health-interval 10s
#         --health-timeout 5s
#         --health-retries 5
#       ports:
#         - 5432:5432
#     rabbitmq:
#       image: rabbitmq:latest
#       ports:
#         - 5672:5672

    # DISABLE tests (below) for now since installation of QP is cumbersome
#   steps:
#   - uses: actions/checkout@v2
#
#   - name: Set up Python ${{ matrix.python-version }}
#     uses: actions/setup-python@v2
#     with:
#       python-version: ${{ matrix.python-version }}
#
#   - name: Install python dependencies
#     run: |
#       pip install --upgrade pip
#       pip install -e .[testing]
#
#   - name: Run test suite
#     env:
#       AIIDA_TEST_BACKEND: ${{ matrix.backend }}
#       # show timings of tests
#       PYTEST_ADDOPTS: "--durations=0"
#
#     run: py.test --cov qp2 --cov-append .

  #  docs:
  #    runs-on: ubuntu-latest
  #    timeout-minutes: 15
  #    steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python 3.8
  #      uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.8
  #    - name: Install python dependencies
  #      run: |
  #        pip install --upgrade pip
  #        pip install --force-reinstall MarkupSafe==2.0.1
  #        pip install -e .[docs]
  #    - name: Build docs
  #      run: cd docs && make
  #    - name: Add nojekyll file
  #      run: touch docs/build/html/.nojekyll
  #    - name: Deploy
  #      uses: peaceiris/actions-gh-pages@v3
  #      with:
  #        github_token: ${{ secrets.GITHUB_TOKEN }}
  #        publish_dir: ./docs/build/html

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[pre-commit,docs,testing]
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
